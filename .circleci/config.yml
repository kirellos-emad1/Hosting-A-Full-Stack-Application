version: 2.1
orbs:
  # install node, and aws services
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@1.3.1
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1
  eb: circleci/aws-elastic-beanstalk@1.0.0
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:16.13"
    steps:
      # install node and checkout code
      - node/install:
          node-version: '16.13'         
      - checkout
      # install dependencies in backend and frontend
      - run:
          name: Back-End Install
          command: |
            npm run backend:install
      - run:
          name: Front-End Install
          command: |
            npm run frontend:install
	# TODO: Lint the frontend
      - run:
          name: Front-End Lint
          command: |
            echo "TODO: Lint the frontend"
            npm run frontend:lint
      # build front-end
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build  
	# build api
	- run:
          name: api Build
          command: |
            npm run backend:build
     # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '16.13' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: Deploy backend
          # TODO: deploy api
          command: |
            echo "# TODO: Install, build, deploy backend"
            npm run api:deploy
	- run:
          name: Deploy frontend
          # TODO: deploy api
          command: |
            echo "# TODO: Install, build, deploy in frontend"
            npm run frontend:deploy
            
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
